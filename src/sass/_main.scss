@use './abstracts/' as *;
@use './base/' as *;
@use './utilities/' as *;
@use './components/' as *;
@use './animations/' as *;

.main {
  background-image: url('../assets/game-background.jpg');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.initial-game-ui {
  @include flex-config(
    $direction: column,
    $align: center,
    $justify: space-around
  );
  min-height: 100vh;
  position: relative;
  z-index: 500;

  &__heading {
    font-size: clamp(4rem, 2vw, 7rem);
    text-transform: uppercase;
    text-shadow: 2px 17px 5px rgba(170, 11, 170, 0.3),
      0px -4px 100px rgba(109, 8, 139, 0.3);
    background: -webkit-linear-gradient(rgb(144, 135, 218), rgb(161, 120, 180));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: pulse 1s infinite ease;
  }

  &__span {
    display: block;
    margin-left: 2rem;
  }
}

.overlay {
  position: absolute;
  inset: 0;
  z-index: -1;
  background-color: rgba(0, 0, 0, 0.8);
}

.game-section {
  @include flex-config(
    $direction: column,
    $align: center,
    $justify: space-around
  );
  min-height: 80vh;
  position: relative;
  display: none;
  color: var(--clr-primary);

  &__heading {
    color: var(--clr-gray-dark);
    text-align: center;
    padding: 5rem 0;
    font-size: clamp(2rem, 2vw, 4rem);
  }
}

.cta-btn {
  font-size: 2rem;
  padding: 2rem 4rem;
  border-radius: 5rem;
  border: none;
  outline: none;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
  font-weight: var(--fw-bold);
  background-color: rgb(187, 58, 226);
  color: var(--clr-primary);
  cursor: pointer;
  box-shadow: var(--shdw-box);

  &--start-game {
    display: none;
    margin: 5rem auto 5rem auto;
  }
}

.fetch-error-msg {
  display: none;
}

.categories-container {
  position: relative;
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;

  @include respond(sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include respond(md) {
    grid-template-columns: repeat(3, 1fr);
  }

  @include respond(lg) {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }
}
